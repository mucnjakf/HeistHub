// <auto-generated />
using System;
using HeistHub.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HeistHub.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250121230117_RefactoredSkillsAndTactics")]
    partial class RefactoredSkillsAndTactics
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HeistHub.Core.Entities.Heist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Heists", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.HeistTactic", b =>
                {
                    b.Property<Guid>("HeistId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TacticId")
                        .HasColumnType("uuid");

                    b.HasKey("HeistId", "TacticId");

                    b.HasIndex("TacticId");

                    b.ToTable("HeistTactics", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.MemberSkill", b =>
                {
                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.HasKey("MemberId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("MemberSkills", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Skills", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Tactic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("MembersRequired")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tactics", (string)null);
                });

            modelBuilder.Entity("HeistMember", b =>
                {
                    b.Property<Guid>("HeistsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MembersId")
                        .HasColumnType("uuid");

                    b.HasKey("HeistsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("HeistMember");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.HeistTactic", b =>
                {
                    b.HasOne("HeistHub.Core.Entities.Heist", "Heist")
                        .WithMany("HeistTactics")
                        .HasForeignKey("HeistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeistHub.Core.Entities.Tactic", "Tactic")
                        .WithMany("HeistTactics")
                        .HasForeignKey("TacticId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Heist");

                    b.Navigation("Tactic");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.MemberSkill", b =>
                {
                    b.HasOne("HeistHub.Core.Entities.Member", "Member")
                        .WithMany("MemberSkills")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeistHub.Core.Entities.Skill", "Skill")
                        .WithMany("MemberSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("HeistMember", b =>
                {
                    b.HasOne("HeistHub.Core.Entities.Heist", null)
                        .WithMany()
                        .HasForeignKey("HeistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeistHub.Core.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Heist", b =>
                {
                    b.Navigation("HeistTactics");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Member", b =>
                {
                    b.Navigation("MemberSkills");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Skill", b =>
                {
                    b.Navigation("MemberSkills");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Tactic", b =>
                {
                    b.Navigation("HeistTactics");
                });
#pragma warning restore 612, 618
        }
    }
}
