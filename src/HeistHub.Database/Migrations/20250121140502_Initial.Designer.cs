// <auto-generated />
using System;
using HeistHub.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HeistHub.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250121140502_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HeistHeistSkill", b =>
                {
                    b.Property<Guid>("HeistId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RequiredSkillsId")
                        .HasColumnType("uuid");

                    b.HasKey("HeistId", "RequiredSkillsId");

                    b.HasIndex("RequiredSkillsId");

                    b.ToTable("HeistHeistSkill");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Heist", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("End")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Heists", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("HeistMember", b =>
                {
                    b.Property<Guid>("HeistsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("MembersId")
                        .HasColumnType("uuid");

                    b.HasKey("HeistsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("HeistMember");
                });

            modelBuilder.Entity("MemberMemberSkill", b =>
                {
                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uuid");

                    b.HasKey("MemberId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("MemberMemberSkill");
                });

            modelBuilder.Entity("HeistHub.Core.Entities.HeistSkill", b =>
                {
                    b.HasBaseType("HeistHub.Core.Entities.Skill");

                    b.Property<int>("MembersRequired")
                        .HasColumnType("integer");

                    b.ToTable("HeistSkills", (string)null);
                });

            modelBuilder.Entity("HeistHub.Core.Entities.MemberSkill", b =>
                {
                    b.HasBaseType("HeistHub.Core.Entities.Skill");

                    b.Property<bool>("IsMain")
                        .HasColumnType("boolean");

                    b.ToTable("MemberSkills", (string)null);
                });

            modelBuilder.Entity("HeistHeistSkill", b =>
                {
                    b.HasOne("HeistHub.Core.Entities.Heist", null)
                        .WithMany()
                        .HasForeignKey("HeistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeistHub.Core.Entities.HeistSkill", null)
                        .WithMany()
                        .HasForeignKey("RequiredSkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HeistMember", b =>
                {
                    b.HasOne("HeistHub.Core.Entities.Heist", null)
                        .WithMany()
                        .HasForeignKey("HeistsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeistHub.Core.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MemberMemberSkill", b =>
                {
                    b.HasOne("HeistHub.Core.Entities.Member", null)
                        .WithMany()
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HeistHub.Core.Entities.MemberSkill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
